name: Nightly TFE Tests
on:
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * *

jobs:
  instance:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Build nightly tflocal instance
        uses: hashicorp-forge/terraform-cloud-action/apply@v1
        with:
          token: ${{ secrets.TF_WORKFLOW_TFLOCAL_CLOUD_TFC_TOKEN }}
          organization: "hashicorp-v2"
          workspace: tflocal-terraform-provider-tfe-nightly
          wait: true

  tests:
    needs: instance
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        total: [ 5 ]
        index: [ 0, 1, 2, 3, 4 ]
    steps:
      - name: Fetch Outputs
        id: tflocal
        uses: hashicorp-forge/terraform-cloud-action/outputs@v1
        with:
          token: "${{ secrets.TF_WORKFLOW_TFLOCAL_CLOUD_TFC_TOKEN }}"
          organization: hashicorp-v2
          workspace: tflocal-terraform-provider-tfe-nightly

      - uses: actions/checkout@v3

      - uses: ./.github/actions/test-provider-tfe
        with:
          matrix_index: ${{ matrix.index }}
          matrix_total: ${{ matrix.total }}
          hostname: ${{ fromJSON(steps.tflocal.outputs.workspace-outputs-json).ngrok_domain }}
          token: ${{ fromJSON(steps.tflocal.outputs.workspace-outputs-json).tfe_token }}
          testing-github-token: ${{ secrets.TESTING_GITHUB_TOKEN }}
          enterprise: "1"

  tests-summarize:
    needs: [tests]
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Check tests Status
        run: |
          if [ "${{ needs.tests.result }}" = "success" ]; then
            exit 0
          fi
          exit 1

  slack-notify:
    needs: tests-summarize
    if: always() && (needs.tests-summarize.result == 'failure')
    runs-on: ubuntu-latest
    steps:
      - name: Send slack notification on failure
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": ":x::moon::sob: Nightly TFE tests *FAILED*",
              "attachments": [
                {
                  "color": "#C41E3A",
                  "blocks": [
                    {
                      "type": "section",
                      "fields": [
                        {
                          "type": "mrkdwn",
                          "text": "*Workflow:*\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

  cleanup:
    runs-on: ubuntu-latest
    needs: [tests-summarize]
    if: "${{ always() }}"
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          check-latest: true
          cache: true

      - name: Destroy nightly tflocal instance
        uses: hashicorp-forge/terraform-cloud-action/destroy@v1
        with:
          token: ${{ secrets.TF_WORKFLOW_TFLOCAL_CLOUD_TFC_TOKEN }}
          organization: "hashicorp-v2"
          workspace: tflocal-terraform-provider-tfe-nightly
          wait: true
          is-destroy: true
